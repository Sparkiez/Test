#!/bin/perl
#Commands for using git ray.
@commands = qw(clone start-topic publish update);

#User arguments
$arg = $ARGV[0];
#The current branch that the user is on
$currentBranch = qx(git rev-parse --abbrev-ref HEAD);
$remoteRepo = "https://github.com/Sparkiez/Test.git";


if ($arg eq $commands[0]) {
	$repo = $ARGV[1];
	
	if ($repo eq "") {
		print "Invalid number of arguments. Please try again with git ray clone <repo.git>.\n";
		exit 0;
	}
	
	system "git clone $repo";
	system "git remote add upstream $repo";
	system "git fetch upstream";
}
elsif ($arg eq $commands[1]) {
	#Create a branch
	print "Name of topic branch:\n";
	$topicBranch = <STDIN>;
	
	chomp $topicBranch;
	
	if ($topicBranch eq "") {
		print "Unable to parse branch name. Exiting.\n";
		exit 0;
	}
	
	print "Topic branch $topicBranch created.\n";
	system "git branch $topicBranch";
	system "git checkout $topicBranch";
}
elsif ($arg eq $commands[2]) {
	#probably don't need this line, but just incase it's not set.
	system "git remote add origin $remoteRepo";
	system "git push origin $currentBranch";
}
elsif ($arg eq $commands[3]) {
	#update
}
elsif ($arg eq "-h") {
	$cmdSize = scalar(@commands);
	print "Only the following commands are valid:\n";
	for ($i = 0; $i < $cmdSize; $i++) {
		print "  -$commands[$i]\n";
	}
}
else {
	print "Invalid command. Use git ray -h to get a list of commands.\n";
}